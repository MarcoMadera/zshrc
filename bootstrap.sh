#!/usr/bin/env bash
set -euo pipefail
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
ZSHRC_DIR="$SCRIPT_DIR"
ZSHRC_TARGET="$HOME/.zshrc"
ZINIT_HOME="${XDG_DATA_HOME:-$HOME/.local/share}/zinit"

echo "üõ†Ô∏è  Bootstrapping modular zsh config..."

# 1. Install Zsh if not present
if ! command -v zsh >/dev/null; then
  echo "üß© Installing Zsh..."
  if [[ "$OSTYPE" == "darwin"* ]]; then
    brew install zsh
  elif [[ -f /etc/arch-release ]]; then
    sudo pacman -S zsh --noconfirm
  elif command -v apt >/dev/null; then
    sudo apt update && sudo apt install zsh -y
  else
    echo "‚ö†Ô∏è  Unsupported distribution. Please install Zsh manually."
    exit 1
  fi
fi

# 2. Set Zsh as default shell
ZSH_PATH="$(command -v zsh)"

# Cross-platform way to check the user's default shell
get_user_shell() {
  if [[ "$OSTYPE" == "darwin"* ]]; then
    dscl . -read "/Users/$USER" UserShell | sed 's/UserShell: //'
  else
    getent passwd "$USER" | cut -d: -f7
  fi
}

CURRENT_SHELL=$(get_user_shell)

if [[ "$CURRENT_SHELL" != "$ZSH_PATH" ]]; then
  echo "üì¶ Setting Zsh as your default shell..."
  
  # Check if zsh is in /etc/shells
  if ! grep -q "$ZSH_PATH" /etc/shells; then
    echo "Adding $ZSH_PATH to /etc/shells"
    echo "$ZSH_PATH" | sudo tee -a /etc/shells
  fi
  
  chsh -s "$ZSH_PATH" || {
    echo "‚ö†Ô∏è  Failed to change shell. Try running: sudo chsh -s $ZSH_PATH $USER"
    read -p "Continue with setup? [y/N] " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
      exit 1
    fi
  }
else
  echo "‚úÖ Zsh is already set as your default shell."
fi

# 3. Create main ~/.zshrc loader
if [[ -f "$ZSHRC_TARGET" ]] && grep -q "ZSHRC_DIR=\"$ZSHRC_DIR\"" "$ZSHRC_TARGET"; then
  echo "‚úÖ ~/.zshrc loader already configured correctly."
else
  echo "üìù Creating ~/.zshrc loader..."
  if [[ -f "$ZSHRC_TARGET" ]] && ! grep -Fq "# ~/.zshrc (autogenerated)" "$ZSHRC_TARGET"; then
    echo "‚ö†Ô∏è  Backing up existing ~/.zshrc"
    cp "$ZSHRC_TARGET" "${ZSHRC_TARGET}.bak.$(date +%s)"
  fi
  # Create the .zshrc file
  cat > "$ZSHRC_TARGET" <<EOF
# ~/.zshrc (autogenerated)
ZSHRC_DIR="$ZSHRC_DIR"
for file in "\$ZSHRC_DIR"/*.zsh; do
  [[ -r "\$file" ]] && source "\$file"
done
EOF
  echo "‚úÖ ~/.zshrc loader created."
fi

# 4. Install Zinit plugin manager
if [[ -f "$ZINIT_HOME/bin/zinit.zsh" ]]; then
  echo "‚úÖ Zinit plugin manager already installed."
else
  echo "üîß Installing Zinit..."
  mkdir -p "$ZINIT_HOME"
  git clone https://github.com/zdharma-continuum/zinit "$ZINIT_HOME/bin" || {
    echo "‚ö†Ô∏è  Failed to install Zinit. Make sure git is installed."
    read -p "Continue with setup? [y/N] " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
      exit 1
    fi
  }
fi

# 5. Optional CLI tool installs
echo "üì¶ Installing recommended CLI tools..."
if [[ "$OSTYPE" == "darwin"* ]]; then
  brew install bat fzf zoxide yazi fd ripgrep
  "$(brew --prefix)/opt/fzf/install" --all --no-bash --no-fish
elif [[ -f /etc/arch-release ]]; then
  sudo pacman -S --needed --noconfirm bat fzf zoxide yazi fd ripgrep
elif command -v apt >/dev/null; then
  sudo apt update
  
  # Handle Yazi separately - it's not in standard repos
  sudo apt install -y bat fzf zoxide fd-find ripgrep
  
  # Install Yazi via cargo if not present
  if ! command -v yazi >/dev/null; then
    if ! command -v cargo >/dev/null; then
      echo "Installing cargo for Yazi..."
      sudo apt install -y cargo
    fi
    echo "Installing Yazi via cargo..."
    cargo install yazi
  fi
  
  # Symlink fd and bat to match common names
  if command -v fdfind >/dev/null && [[ ! -e /usr/local/bin/fd ]]; then
    sudo ln -s "$(which fdfind)" /usr/local/bin/fd
  fi
  
  if command -v batcat >/dev/null && [[ ! -e /usr/local/bin/bat ]]; then
    sudo ln -s "$(which batcat)" /usr/local/bin/bat
  fi
else
  echo "‚ö†Ô∏è  Unsupported distribution for automatic CLI tool installation."
  echo "Please install bat, fzf, zoxide, yazi, fd, and ripgrep manually."
fi

echo "üéâ Zsh is ready. Reload with: exec zsh"
